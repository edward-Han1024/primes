// Copyright 2024 Edward Han under the Apache 2.0 License
const fs=require("fs");function sieveOfEratosthenes(e=100){console.log("start");let o=[],s=[],l=[],n=[],r=[];function i(i){return i<=e/5?o[i]:i<=2*e/5?s[i-e/5-1]:i<=3*e/5?l[i-2*e/5-1]:i<=4*e/5?n[i-3*e/5-1]:r[i-4*e/5-1]}console.log("filling array"),o=Array(e/5+1).fill(!0),console.log("1 done"),s=Array(e/5).fill(!0),console.log("2 done"),l=Array(e/5).fill(!0),console.log("3 done"),n=Array(e/5).fill(!0),console.log("4 done"),r=Array(e/5).fill(!0),console.log("Array filling done!"),o[0]=o[1]=!1,k=0,console.log("starting main loop");for(let t=2;t<=Math.sqrt(e);t++)if(i(t))for(let c=t*t;c<=e;c+=t)i(c)&&k++,c<=e/5?o[c]=!1:c<=2*e/5?s[c-e/5-1]=!1:c<=3*e/5?l[c-2*e/5-1]=!1:c<=4*e/5?n[c-3*e/5-1]=!1:r[c-4*e/5-1]=!1,k%2e4==0&&process.stdout.write(`\r${k}`);console.log("\nmain loop over");let t=[];return console.log("final list"),t.push(o.reduce(((e,o,s)=>(o&&e.push(s),e)),[])),console.log("1 done"),t.push(s.reduce(((o,s,l)=>(s&&o.push(l+e/5+1),o)),[])),console.log("2 done"),t.push(l.reduce(((o,s,l)=>(s&&o.push(l+2*e/5+1),o)),[])),console.log("3 done"),t.push(n.reduce(((o,s,l)=>(s&&o.push(l+3*e/5+1),o)),[])),console.log("4 done"),t.push(r.reduce(((o,s,l)=>(s&&o.push(l+4*e/5+1),o)),[])),console.log("5 done"),t}const readline=require("readline").createInterface({input:process.stdin,output:process.stdout});readline.question("int ",(e=>{const o=sieveOfEratosthenes(parseInt(e));console.log("storing files"),fs.writeFileSync("./primes/primes1.txt",JSON.stringify(o[0])),console.log("1 done"),fs.writeFileSync("./primes/primes2.txt",JSON.stringify(o[1])),console.log("2 done"),fs.writeFileSync("./primes/primes3.txt",JSON.stringify(o[2])),console.log("3 done"),fs.writeFileSync("./primes/primes4.txt",JSON.stringify(o[3])),console.log("4 done"),fs.writeFileSync("./primes/primes5.txt",JSON.stringify(o[4])),console.log("all done closing..."),readline.close()}));
